docker container run alpine hostname
docker container ls --all
docker container run --interactive --tty --rm ubuntu bash
ls /
ps aux
cat /etc/issue
exit
cat /etc/issue
большая команда тут
docker container ls
docker container logs mydb
docker container top mydb
 docker exec -it mydb \
 mysql --user=root --password=$MYSQL_ROOT_PASSWORD --version
docker exec -it mydb sh
mysql --user=root --password=$MYSQL_ROOT_PASSWORD --version
//ДАЛЬШЕ МЫ СОЗДАЕМ СВОЙ КОНТЕЙНЕР
cat Dockerfile
$env:DOCKERID = "roubeq"
echo $env:DOCKERID
docker image build --tag "$($env:DOCKERID)/linux_tweet_app:1.0" .
	docker container run `
 --detach `
 --publish 80:80 `
 --name linux_tweet_app `
 "$($env:DOCKERID)/linux_tweet_app:1.0"

 docker container rm --force linux_tweet_app

 docker container run \
 --detach \
 --publish 80:80 \
 --name linux_tweet_app \
 --mount type=bind,source="$(pwd)",target=/usr/share/nginx/html \
 $DOCKERID/linux_tweet_app:1.0

cp index-new.html index.html
 docker rm --force linux_tweet_app
docker rm --force linux_tweet_app
 docker image build --tag $DOCKERID/linux_tweet_app:2.0 .

 docker container run \
 --detach \
 --publish 8080:80 \
 --name old_linux_tweet_app \
 $DOCKERID/linux_tweet_app:1.0

docker image ls -f reference="$DOCKERID/*"